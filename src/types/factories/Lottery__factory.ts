/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Lottery, LotteryInterface } from "../Lottery";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "BidPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    name: "RewardClaimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "calculateRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimTreasure",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getClaimableBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "placeBid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405266038d7ea4c68000600055600060035534801561002057600080fd5b50610e4a806100306000396000f3fe60806040526004361061004a5760003560e01c806306def8021461004f578063769658671461008c578063d3ea4350146100b7578063ecfc7ecc146100e0578063f335adb0146100ea575b600080fd5b34801561005b57600080fd5b50610076600480360381019061007191906108b7565b610101565b6040516100839190610b2d565b60405180910390f35b34801561009857600080fd5b506100a16101b9565b6040516100ae9190610b2d565b60405180910390f35b3480156100c357600080fd5b506100de60048036038101906100d991906108e0565b6101e5565b005b6100e86102a4565b005b3480156100f657600080fd5b506100ff6103fd565b005b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610172576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016990610aad565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006101dd604051806060016040528060298152602001610dc96029913943610670565b600354905090565b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610255576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024c90610aad565b60405180910390fd5b610277604051806060016040528060248152602001610d7e6024913982610670565b610299604051806060016040528060278152602001610da2602791393361070c565b6102a16107a8565b50565b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610314576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030b90610aad565b60405180910390fd5b600054341015610359576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035090610aed565b60405180910390fd5b6103616107a8565b34600360008282546103739190610b6f565b925050819055504360018190555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f3fabff0a9c3ecd6814702e247fa9733e5d0aa69e3a38590f92cb18f623a2254d33436040516103f3929190610a24565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561046d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046490610aad565b60405180910390fd5b6104756107a8565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116104f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ee90610b0d565b60405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516105a690610a0f565b60006040518083038185875af1925050503d80600081146105e3576040519150601f19603f3d011682016040523d82523d6000602084013e6105e8565b606091505b505090506001151581151514610633576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062a90610acd565b60405180910390fd5b7f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72413383604051610664929190610a24565b60405180910390a15050565b6107088282604051602401610686929190610a7d565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610864565b5050565b6107a48282604051602401610722929190610a4d565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610864565b5050565b6107ca604051806060016040528060238152602001610df26023913943610670565b6003600154436107da9190610bc5565b106108625760035460046000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108529190610b6f565b9250508190555060006003819055505b565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60008135905061089c81610d4f565b92915050565b6000813590506108b181610d66565b92915050565b6000602082840312156108c957600080fd5b60006108d78482850161088d565b91505092915050565b6000602082840312156108f257600080fd5b6000610900848285016108a2565b91505092915050565b61091281610bf9565b82525050565b600061092382610b48565b61092d8185610b5e565b935061093d818560208601610c35565b61094681610c97565b840191505092915050565b600061095e601183610b5e565b915061096982610ca8565b602082019050919050565b6000610981601383610b5e565b915061098c82610cd1565b602082019050919050565b60006109a4601583610b5e565b91506109af82610cfa565b602082019050919050565b60006109c7601583610b5e565b91506109d282610d23565b602082019050919050565b60006109ea600083610b53565b91506109f582610d4c565b600082019050919050565b610a0981610c2b565b82525050565b6000610a1a826109dd565b9150819050919050565b6000604082019050610a396000830185610909565b610a466020830184610a00565b9392505050565b60006040820190508181036000830152610a678185610918565b9050610a766020830184610909565b9392505050565b60006040820190508181036000830152610a978185610918565b9050610aa66020830184610a00565b9392505050565b60006020820190508181036000830152610ac681610951565b9050919050565b60006020820190508181036000830152610ae681610974565b9050919050565b60006020820190508181036000830152610b0681610997565b9050919050565b60006020820190508181036000830152610b26816109ba565b9050919050565b6000602082019050610b426000830184610a00565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610b7a82610c2b565b9150610b8583610c2b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610bba57610bb9610c68565b5b828201905092915050565b6000610bd082610c2b565b9150610bdb83610c2b565b925082821015610bee57610bed610c68565b5b828203905092915050565b6000610c0482610c0b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610c53578082015181840152602081019050610c38565b83811115610c62576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f41646472657373206e6f742076616c6964000000000000000000000000000000600082015250565b7f457468207472616e73666572206661696c656400000000000000000000000000600082015250565b7f496e73756666696369656e742062696420636f73740000000000000000000000600082015250565b7f4e6f6e6520636c61696d61626c65207265776172640000000000000000000000600082015250565b50565b610d5881610bf9565b8114610d6357600080fd5b50565b610d6f81610c2b565b8114610d7a57600080fd5b5056fe4c6f74746572792e63616c63756c617465526577617264732e5f616d6f756e74203d3e204c6f74746572792e63616c63756c617465526577617264732e6d73672e73656e646572203d3e204c6f74746572792e6765745374616b656442616c616e63652e626c6f636b2e6e756d626572203d3e204c6f74746572792e63616c635265776172642e626c6f636b2e6e756d626572203d3e20a2646970667358221220d19ab4b5809f968fb1073cabbc629a63da580e6491c7bb2c85bb0c2be52271f264736f6c63430008040033";

export class Lottery__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Lottery> {
    return super.deploy(overrides || {}) as Promise<Lottery>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Lottery {
    return super.attach(address) as Lottery;
  }
  connect(signer: Signer): Lottery__factory {
    return super.connect(signer) as Lottery__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryInterface {
    return new utils.Interface(_abi) as LotteryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Lottery {
    return new Contract(address, _abi, signerOrProvider) as Lottery;
  }
}
